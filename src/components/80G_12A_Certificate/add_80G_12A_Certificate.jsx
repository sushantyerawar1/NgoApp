import { Box, Button, FormControl, TextField, Toolbar, Typography, Select } from "@mui/material";
import React, { useState, useEffect } from "react";
import ArrowBackIcon from "@mui/icons-material/ArrowBack";
import CheckIcon from "@mui/icons-material/Check";
import axios from "axios";
import Header from "../header/header";
import imageCompression from 'browser-image-compression';
import { useNavigate } from "react-router-dom";

export default function ADD_G80_A12_Certificate(params) {


    const navigate = useNavigate();
    const [content, setcontent] = useState('');
    const [data, setdata] = useState({
        "certificate80G12AId": "autogeneted",
        "certificate80G12AName": "",
        "certificate80G12ADescription": "",
        "certificate80G12APic": ""

    });


    const handleChange = (e) => {
        const { name, value } = e.target;
        setdata({ ...data, [name]: value });
    };


    const [baseImage, setBaseImage] = useState("");
    const [imageName, setImageName] = useState();


    const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
            const fileReader = new FileReader();
            fileReader.readAsDataURL(file);

            fileReader.onload = () => {
                resolve(fileReader.result);
            }

            fileReader.onerror = (error) => {
                reject(error);
            }
        })
    }


    // const uploadImage = async (e) => {
    //     const files = e.target.files;
    //     console.log(files)
    //     const file = e.target.files[0];
    //     const fullFileName = file.name;
    //     console.log(fullFileName)
    //     const options = {
    //         maxSizeMB: 0.5,
    //         maxWidthOrHeight: 960,
    //         useWebWorker: true
    //     }

    //     // const filebuffer = convertToBuffer(files);
    //     // const compressedFile = await imageCompression(file, options);
    //     // console.log(compressedFile.arrayBuffer, '11')
    //     // const convertedFile = await convertBase64(compressedFile);
    //     // console.log(convertedFile, '12')
    //     // setBaseImage(convertedFile)
    //     // setImageName(fullFileName)
    // }


    // const imageupload = (e) => {
    //     console.log(e.target, 'hiii')
    //     const link = `https://avinya01.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`
    //     setcontent(e.target)
    //     // console.log(e.target.files[0].name, 'hiii')

    //     // console.log("https://avinya01.s3.ap-south-1.amazonaws.com/" + URL.createObjectURL(e.target.files[0]).split('//')[1].split('/')[1])
    //     // setcontent("https://avinya01.s3.ap-south-1.amazonaws.com/" + URL.createObjectURL(e.target.files[0]).split('//')[1].split('/')[1])
    // };


    // useEffect(() => {
    //     setdata({ ...data, ['certificate80G12APic']: content });
    // }, [content]);


    console.log({
        certificate80G12AId: "Autogenerated",
        certificate80G12AName: data.certificate80G12AName,
        certificate80G12ADescription: data.certificate80G12ADescription,
        certificate80G12APic: content

    })



    const handleClickfun = async () => {

        const response = await fetch(
            `https://ngoapp01.azurewebsites.net/api/v1/createcertificate80G12AProfile`,
            {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    // 'Authorization': 'Bearer ' + access_token,
                },
                credentials: 'include',
                body: {
                    // certificate80G12AId: "Autogenerated",
                    certificate80G12AName: data.certificate80G12AName,
                    certificate80G12ADescription: data.certificate80G12ADescription,
                    certificate80G12APic: content
                },

                mode: 'cors'

            }
        );



        const data2 = await response.json();
        console.log(data2, 'data2')

        // await axios
        //     .post("https://ngoapp01.azurewebsites.net/api/v1/createcertificate80G12AProfile", {
        //         // certificate80G12AId: "Autogenerated",
        //         certificate80G12AName: data.certificate80G12AName,
        //         certificate80G12ADescription: data.certificate80G12ADescription,
        //         certificate80G12APic: content
        //     })
        //     .then((res) => {
        //         console.log(res, 'finalupload');
        //         const { message } = res.data;
        //         alert(message);
        //         setdata({
        //             "certificate80G12AId": "autogeneted",
        //             "certificate80G12AName": "",
        //             "certificate80G12ADescription": "",
        //             "certificate80G12APic": ""
        //         })
        //         setcontent('')
        //     });
    };

    return (
        <>
            <Header />
            <Box component="main" sx={{ flexGrow: 1, p: 3, bgcolor: "#F5F5F5" }}>
                <Toolbar />
                <Typography
                    variant="h4"
                    sx={{ fontSize: "30px", color: "#E56757", textAlign: "center" }}
                >
                    80G/12A Certificate
                </Typography>

                <Box
                    sx={{
                        marginLeft: "50px",
                        marginRight: "50px",
                        width: "auto",
                        height: "auto",
                        marginTop: "20px",
                        background: "#FFFFFF",
                    }}
                >

                    <Typography
                        sx={{ width: "100%", border: "1px solid #F0F0F0" }}
                    ></Typography>
                    <Typography
                        variant="h4"
                        sx={{
                            padding: "20px",
                            color: "#4F5256",
                            fontSize: "20px",
                            fontWeight: 700,
                            textAlign: 'center'
                        }}
                    >
                        Add 80G/12A Certificate
                    </Typography>
                    <Typography
                        sx={{ width: "100%", border: "1px solid #F0F0F0" }}
                    ></Typography>

                    <FormControl
                        sx={{
                            paddingLeft: "50px",
                            paddingRight: "50px",
                            display: "flex",
                            flexDirection: "row",
                            justifyContent: "space-around",
                        }}
                    >
                        <Typography variant="h6" sx={{ padding: "15px", color: "#4F5256" }}>
                            80G/12A Certificate Name
                        </Typography>
                        <TextField
                            sx={{ width: "75%" }}
                            placeholder="Enter 80G/12A Certificate Name"
                            name="certificate80G12AName"
                            value={data.certificate80G12AName}
                            onChange={(e) => handleChange(e)}
                        ></TextField>
                    </FormControl>

                    <FormControl
                        sx={{
                            paddingLeft: "40px",
                            paddingRight: "50px",
                            paddingTop: "50px",
                            display: "flex",
                            flexDirection: "row",
                            justifyContent: "space-around",
                        }}
                    >
                        <Typography variant="h6" sx={{ padding: "15px", color: "#4F5256" }}>
                            80G/12A Certificate Description
                        </Typography>
                        <TextField
                            sx={{ width: "75%" }}
                            placeholder="Enter 80G/12A Certificate Description"
                            name="certificate80G12ADescription"
                            value={data.certificate80G12ADescription}
                            onChange={(e) => handleChange(e)}
                        ></TextField>
                    </FormControl>


                    <FormControl
                        sx={{
                            paddingLeft: "40px",
                            paddingRight: "50px",
                            paddingTop: "50px",
                            display: "flex",
                            flexDirection: "row",
                            justifyContent: "space-around"
                        }}
                    >
                        <Typography variant="h6" sx={{ padding: "15px", color: "#4F5256" }}>
                            Upload 80G/12A Certificate
                        </Typography>
                        <TextField
                            type="file"
                            sx={{ width: "75%" }}
                            placeholder="Announcement For "
                            name="certificate80G12APic"
                            accept="image/*"
                        // onChange={(e) => {
                        //     uploadImage(e);
                        // }}
                        ></TextField>
                    </FormControl>



                    <br />
                    <br />


                    <FormControl
                        sx={{
                            padding: "50px",
                            display: "flex",
                            flexDirection: "row",
                            justifyContent: "center",
                        }}
                    >
                        <Button
                            size="large"
                            variant="outlined"
                            sx={{ bgcolor: "#fff", marginRight: "10px", color: "#000" }}
                            startIcon={<ArrowBackIcon />}
                            onClick={() => navigate("/g80_a12_certificate")}
                        >
                            Back
                        </Button>
                        <Button
                            size="large"
                            variant="outlined"
                            sx={{ color: "#E56757" }}
                            startIcon={<CheckIcon />}
                            onClick={() => handleClickfun()}
                        >
                            Submit
                        </Button>
                    </FormControl>
                </Box>
            </Box>
        </>
    );
};