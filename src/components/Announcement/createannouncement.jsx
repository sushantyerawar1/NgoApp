import { Box, Button, FormControl, TextField, Toolbar, Typography, Select } from "@mui/material";
import React, { useState, useRef, useMemo, useEffect } from "react";
import ArrowBackIcon from "@mui/icons-material/ArrowBack";
import CheckIcon from "@mui/icons-material/Check";
import axios from "axios";
import Header from "../header/header";
import { useNavigate } from "react-router-dom";
import JoditEditor from "jodit-react";
import userEvent from "@testing-library/user-event";


export default function CreateAnnouncement(params) {


    const navigate = useNavigate();
    const [data, setdata] = useState({
        AnnounceMentId: "autoGenerated",
        Title: "",
        CreatedBy: "Vishal",
        Content: ""

    });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setdata({ ...data, [name]: value });
    };

    const editor = useRef(null);
    const [content, setContent] = useState('');

    let objectDate = new Date();


    let day = objectDate.getDate();
    let month = (objectDate.getMonth() + 1);
    let year = objectDate.getFullYear();

    const handleClickfun = async () => {
        console.log("->", data);
        await axios
            .post("https://ngoapp01.azurewebsites.net/api/v1/CreateAnnounceMentDetails", {
                "AnnounceMentId": "autoGenerated",
                "DateCreated": day + '-' + month + '-' + year,
                "Title": data.Title,
                "CreatedBy": "Vishal",
                "Content": data.Content
            })
            .then((res) => {
                const { message } = res.data;
                alert(message);
                setdata({
                    AnnounceMentId: "autoGenerated",
                    Title: "",
                    CreatedBy: "Vishal",
                    Content: ""
                })
                setContent('')
            });
    };

    useEffect(() => {
        setdata({ ...data, ["Content"]: content });
    }, [content])

    return (
        <>
            <Header />
            <Box component="main" sx={{ flexGrow: 1, p: 3, bgcolor: "#F5F5F5" }}>
                <Toolbar />
                <Typography
                    variant="h4"
                    sx={{ fontSize: "30px", color: "#E56757", textAlign: "center" }}
                >
                    Announcement Management
                </Typography>

                <Box
                    sx={{
                        marginLeft: "50px",
                        marginRight: "50px",
                        width: "auto",
                        height: "auto",
                        marginTop: "20px",
                        background: "#FFFFFF",
                    }}
                >

                    <Typography
                        sx={{ width: "100%", border: "1px solid #F0F0F0" }}
                    ></Typography>
                    <Typography
                        variant="h4"
                        sx={{
                            padding: "20px",
                            color: "#4F5256",
                            fontSize: "20px",
                            fontWeight: 700,
                            textAlign: 'center'
                        }}
                    >
                        Create New Announcement
                    </Typography>
                    <Typography
                        sx={{ width: "100%", border: "1px solid #F0F0F0" }}
                    ></Typography>

                    <FormControl
                        sx={{
                            paddingLeft: "50px",
                            paddingRight: "50px",
                            display: "flex",
                            flexDirection: "row",
                            justifyContent: "space-around",
                        }}
                    >
                        <Typography variant="h6" sx={{ padding: "15px", color: "#4F5256" }}>
                            Title
                        </Typography>
                        <TextField
                            sx={{ width: "75%" }}
                            placeholder="Enter Title"
                            name="Title"
                            value={data.Title}
                            onChange={(e) => handleChange(e)}
                        ></TextField>
                    </FormControl>

                    <Typography variant="h6" sx={{ padding: "15px", color: "#4F5256", marginLeft: "9%" }}>
                        Content
                    </Typography>
                    <span >

                        <div style={{ width: '80%', height: "20%", marginLeft: "13%" }}>

                            <JoditEditor
                                ref={editor}
                                value={content}
                                tabIndex={1}
                                onBlur={newContent => setContent(newContent)}
                                onChange={newContent => { }}
                            />
                        </div>
                    </span>

                    <br />
                    <br />


                    <FormControl
                        sx={{
                            padding: "50px",
                            display: "flex",
                            flexDirection: "row",
                            justifyContent: "center",
                        }}
                    >
                        <Button
                            size="large"
                            variant="outlined"
                            sx={{ bgcolor: "#fff", marginRight: "10px", color: "#000" }}
                            startIcon={<ArrowBackIcon />}
                            onClick={() => navigate("/announcement")}
                        >
                            Back
                        </Button>
                        <Button
                            size="large"
                            variant="outlined"
                            sx={{ color: "#E56757" }}
                            startIcon={<CheckIcon />}
                            onClick={() => handleClickfun()}
                        >
                            Submit
                        </Button>
                    </FormControl>
                </Box>
            </Box >
        </>
    );
};